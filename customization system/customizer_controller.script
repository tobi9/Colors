--The id of this script needed by the shell scipts
customizer_controller = "customizer:/controller#customizer_controller"

local customizer_menu_proxy = "#customizer_menu_proxy"
local menu_shell_proxy = "#menu_shell_proxy"
local upgrades_shell_proxy = "#upgrades_shell_proxy"
local palette_proxy = "#palette_proxy"
local level_shell_proxy = "#level_shell_proxy"
local color_menu_shell_proxy = "#color_menu_shell_proxy"

local load_col = function(col)
	msg.post(col, "load")
end

local unload_col = function(col)
	msg.post(col, "unload")
end

local enable_col = function(col)
	msg.post(col, "enable")
end

local disable_col = function(col)
	msg.post(col, "disable")
end

function init(self)
	msg.post(".", "acquire_input_focus")
	load_col(customizer_menu_proxy)
end

function final(self)
	msg.post(".", "release_input_focus")
end

-- this variable holds the proxy of the collection that requested the palette so it can be loaded back when the palette is unloaded
local col_to_disable
local active_col

function on_message(self, message_id, message, sender)
	--message_ids
	local proxy_unloaded = hash("proxy_unloaded")
	local proxy_loaded = hash("proxy_loaded")
	local ld_menu_shl = hash("load_menu_shell")
	local unld_menu_shl = hash("unload_menu_shell")
	local ld_upgrds_shl = hash("load_upgrades_shell")
	local unld_upgrds_shl = hash("unload_upgrades_shell")
	local ld_palette = hash("load_palette")
	local unld_palette = hash("unload_palette")
	local actv_shl = hash("active_shell")
	local ld_lvl_shl = hash("load_level_shell")
	local unld_lvl_shl = hash("unload_level_shell")
	local ld_clr_menu_shl = hash("load_color_menu_shell")
	local unld_clr_menu_shl = hash("unload_color_menu_shell")
	if message_id == proxy_loaded then
		msg.post(sender, "init")
		msg.post(sender, "enable")
	elseif message_id == actv_shl then
		active_col = message.collection
	elseif message_id == ld_menu_shl then
		load_col(menu_shell_proxy)
		unload_col(customizer_menu_proxy)
	elseif message_id == unld_menu_shl then
		unload_col(menu_shell_proxy)
		load_col(customizer_menu_proxy)
	elseif message_id == ld_upgrds_shl then
		load_col(upgrades_shell_proxy)
		unload_col(customizer_menu_proxy)
	elseif message_id == unld_upgrds_shl then
		unload_col(upgrades_shell_proxy)
		load_col(customizer_menu_proxy)
	elseif message_id == ld_clr_menu_shl then
		load_col(color_menu_shell_proxy)
		unload_col(customizer_menu_proxy)
	elseif message_id == unld_clr_menu_shl then
		unload_col(color_menu_shell_proxy)
		load_col(customizer_menu_proxy)
	elseif message_id == ld_palette then
		load_col(palette_proxy)
		col_to_disable = "#"..message.collection.."_shell_proxy" 
		disable_col(col_to_disable)
	elseif message_id == unld_palette then
		enable_col(col_to_disable)
		unload_col(palette_proxy)
		local receiver = active_col.."_shell:/"..active_col.."#"..active_col.."_shell"
		msg.post(receiver, "enabled")
	elseif message_id == ld_lvl_shl then
		load_col(level_shell_proxy)
		unload_col(customizer_menu_proxy)
	elseif message_id == unld_lvl_shl then
		unload_col(level_shell_proxy)
		load_col(customizer_menu_proxy)
	end
end