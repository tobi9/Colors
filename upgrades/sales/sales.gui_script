local TouchFb = require("modules.animation")
local tier_one_offers = {{package_id = "tier_one", _coins = 30000, _brakes = 500, _lives = 600, cash = 300000, price = 199.99}}
local tier_two_offers = {{package_id = "tier_two", _coins = 3000, _brakes = 50, _lives = 60, cash = 30000, price = 19.99}}

local function tier_one_iap_listener(self, transaction, error)
	if transaction.state == iap.TRANS_STATE_PURCHASED then
		gold = gold + 3000
		diamonds = diamonds + 50
	end
end

--the selected offers will be placed in the containers below
local tier_one_offer
local tier_two_offer

--the package ids are needed to correspond with the play console . Since the are chosen at random, they will be placed in the table below
local package_ids = {} 

local function product_list(self, products, error)
	if error == nil then
		for i in ipairs(products) do
			print(p.ident)
			print(p.title)
			print(p.description)
			print(p.currency_code)
			print(p.price_string)
		end
	else
		print(error.error)
	end
end

--This holds the selected offer after the player clicks. It is needed by the callback to determine what the player bought.
local selected_offer
local function iap_listener(self, transaction, error)
	if transaction.state == iap.TRANS_STATE_PURCHASED then
		coins = coins + selected_offer._coins
		brakes = brakes + selected_offer._brakes
		lives = lives + selected_offer._lives
		money = money + selected_offer.cash
	end
end

function init(self)
	msg.post("@render:", "clear_color", { color = vmath.vector4(1, 1, 1, 0) } )
	msg.post(".", "acquire_input_focus")
	--choose and sort the offers
	tier_one_offer = tier_one_offers[math.random(#tier_one_offers)]
	tier_two_offer = tier_two_offers[math.random(#tier_two_offers)]
	table.insert(package_ids, tier_one_offer)
	table.insert(package_ids, tier_two_offer)
	-- initiate  a fetch of products 
	iap.list(package_ids, product_list)
end

function final(self)
	msg.post(".", "release_input_focus")
end

function on_message(self, message_id, message, sender)

end



local function test_function()
	coins = coins + selected_offer._coins
	brakes = brakes + selected_offer._brakes
	lives = lives + selected_offer._lives
	money = money + selected_offer.cash
end

local button_tapped
local input_handler = function()
	if button_tapped == 'box' then
		selected_offer = tier_one_offer
		--[[iap.set_listener(iap_listener)
		iap.buy(selected_offer.package_id)]]
		test_function()
	elseif button_tapped == 'box1' then
		selected_offer = tier_two_offer
		--[[iap.set_listener(iap_listener)
		iap.buy(selected_offer.package_id)]]
		test_function()
	end
	msg.post("main:/main#data_handler", "save_data")
end

function on_input(self, action_id, action)
	--action id
	local touch = hash("touch")
	local nodes = {'box', 'box1'}
	if action_id == touch and action.released then
		for k, v in ipairs(nodes) do
			local node = gui.get_node(v)
			if gui.pick_node(node, action.x, action.y) then
				button_tapped = v
				TouchFb.touch_feedback(node, input_handler)
			end
		end
	end
end