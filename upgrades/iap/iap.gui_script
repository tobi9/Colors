-- in app purchase stuff
local p1 = 'package1'
local p2 = 'package2'
local p3 = 'package3'

local function product_list(self, products, error)
	if error == nil then
		for i in ipairs(products) do
			print(p.ident)
			print(p.title)
			print(p.description)
			print(p.currency_code)
			print(p.price_string)
		end
	else
		print(error.error)
	end
end

local function iap_listener1(self, transaction, error)
	if transaction.state == iap.TRANS_STATE_PURCHASED then
		gold = gold + 3000
		diamonds = diamonds + 50
	end
end

local function iap_listener2(self, transaction, error)
	if transaction.state == iap.TRANS_STATE_PURCHASED then
		gold = gold + 6000
		diamonds = diamonds + 150
	end
end

local function iap_listener3(self, transaction, error)
	if transaction.state == iap.TRANS_STATE_PURCHASED then
		gold = gold + 12000
		diamonds = diamonds + 300
	end
end

local button_tapped = nil

local function handle_input()
	if button_tapped == 'p1' then
		iap.set_listener(iap_listener1)
		iap.buy(p1)
	elseif button_tapped == 'p2' then
		iap.set_listener(iap_listener2)
		iap.buy(p2)
	elseif button_tapped == 'p3' then
		iap.set_listener(iap_listener3)
		iap.buy(p3)
	elseif button_tapped == 'menu' then
		msg.post("main:/main#main", "unload_iap")
	end
end

local TouchFb = require("modules.animation")

function init(self)
	msg.post("@render:", "clear_color", { color = vmath.vector4(1, 1, 1, 0) } )
	local function animate_button(node)
		gui.animate(node, "rotation.z", 1, gui.EASING_OUTSINE, 5, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	end

	local function animate_menu(nodes)
		for i in ipairs(nodes) do
			animate_button(nodes[i])
		end
	end

	local node_table = {}-- each gui script has its own node_table

	local function get_nodes(string_table)
		for i in ipairs(string_table) do
			table.insert(node_table, gui.get_node(string_table[i]))
		end
	end

	local node_strings = {'p1', 'p2', 'p3', 'gold', 'diamonds', 'menu', '_menu', 'c1g', 'c1d', 'c1g1',
	'c1d1', 'c1d2', 'c1g2', 'price1', 'price2', 'price3'}
	get_nodes(node_strings)
	animate_menu(node_table)
	local title = gui.get_node("title")
	gui.animate(title , "position.y", 1020, gui.EASING_INBOUNCE, 5, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	msg.post(".", "acquire_input_focus")
	-- initiate  a fetch of products 
	iap.list({ p1, p2, p3}, product_list)
end

function final(self)
	msg.post(".", "release_input_focus")
end

local touch = hash("touch")
local back = hash("back")

function on_input(self, action_id, action)
	if action_id == touch and action.released then
		msg.post("#click", "play_sound", {delay = 0, gain = 1})
		local package1 = gui.get_node("p1")
		local package2 = gui.get_node("p2")
		local package3 = gui.get_node("p3")
		local menu = gui.get_node("_menu")
		if gui.pick_node(package1, action.x, action.y) then
			button_tapped = 'p1'
			TouchFb.touch_feedback(package1, handle_input)
		elseif gui.pick_node(package2, action.x, action.y) then
			button_tapped = 'p2'
			TouchFb.touch_feedback(package2, handle_input)
		elseif gui.pick_node(package3, action.x, action.y)then
			button_tapped = 'p3'
			TouchFb.touch_feedback(package3, handle_input)
		elseif gui.pick_node(menu, action.x, action.y) then
			button_tapped = 'menu'
			TouchFb.touch_feedback(menu, handle_input)
		end
	elseif action_id == back then
		button_tapped = 'menu'
		TouchFb.touch_feedback(menu, handle_input)
	end
	msg.post("main:/main#data_handler", "save_data")
end