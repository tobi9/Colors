local duration = 4795 --seconds

local start_countdown = function()
    if duration > 0 then
        duration = duration - 1
    end
    local sec = duration % 60
    if sec < 10 then
        sec = "0"..sec
    end
    local min = math.floor(duration/60) % 60
    if min < 10 then
        min = "0"..min
    end
    local hour = math.floor(math.floor(duration/60)/60)
    if hour < 10 then
        hour = "0"..hour
    end
    local countdown_node = gui.get_node('title')
    gui.set_text(countdown_node, hour..":"..min..":"..sec)
    if duration > 0 then
        msg.post(".", "continue_countdown")
    else
        
    end
end

function init(self)
    --retrieve countdown data
    local folder = "trick colors"
    local file = sys.get_save_file(folder, "countdown_data")
    local table = sys.load(file)
    local elapsed_time = os.time() - table[1] --calculate how many seconds have passed since the last exit.table[1] is the time of exit 
    local time_left = table[2] - elapsed_time -- calulate how much time left the countdown has. table[2] is the duration of the coundown at exit
    if time_left <= 0 then
        duration = 0
    else
        duration = time_left
    end
    start_countdown()
end

function final(self)
    local exit_time = os.time()
    local folder = "trick colors"
    local file = sys.get_save_file(folder, "countdown_data")
    sys.save(file, {exit_time, duration})
end

local cont_countdown = hash('continue_countdown')
function on_message(self, message_id, message, sender)
    if message_id == cont_countdown then
        timer.delay(1, false, start_countdown)
    end
end