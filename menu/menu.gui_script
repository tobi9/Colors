-- this are global functions are global variables used by all the gui scipts
-- the is  how long the button animation takes

--BUTTON_ANIMATION_DURATION = 0.09

local TouchFb = require("modules.animation")

local button_tapped = nil

local is_exit_prompt_active
local function hide_exit_prompt()
	local nodes = {'exit_dialogue_box', 'exit_text', 'yes_exit', 'no_exit', 'yes','no'}	
	for i in ipairs(nodes) do
		local node = gui.get_node(nodes[i])
		gui.set_enabled(node, false)
	end
	local node_strings = {'heading', 'start', "_start", "upgrades", "_upgrades", "sound", 
	"_sound", "exit", "_exit"}
	for i in ipairs(node_strings) do
		local node = gui.get_node(node_strings[i])
		gui.set_enabled(node, true)
	end
	is_exit_prompt_active = false
end

local function show_exit_prompt()
	local nodes = {'exit_dialogue_box', 'exit_text', 'yes_exit', 'no_exit', 'yes','no'}	
	for i in ipairs(nodes) do
		local node = gui.get_node(nodes[i])
		gui.set_enabled(node, true)
	end

	local text = gui.get_node('exit_text')
	local node_strings = {'heading', 'start', "_start", "upgrades", "_upgrades", "sound", 
	"_sound", "exit", "_exit"}
	for i in ipairs(node_strings) do
		local node = gui.get_node(node_strings[i])
		gui.set_enabled(node, false)
	end
	is_exit_prompt_active = true
end

local function handle_input()
	if button_tapped == 'start' then
		msg.post(main, "start")
	elseif button_tapped == 'upgrades' then
		msg.post(main, "upgrades")
	elseif button_tapped == 'sound' then
		msg.post(main, "sound")
	elseif button_tapped == 'exit' then
		show_exit_prompt()
	elseif button_tapped == 'yes' then
		msg.post("@system:", "exit", {code = 0})
	else
		hide_exit_prompt()
	end
end

local function animate_button(node)
	gui.animate(node, "rotation.z", 1, gui.EASING_OUTSINE, 5, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
end

local function animate_menu(nodes)
	for i in ipairs(nodes) do
		animate_button(nodes[i])
	end
end

local node_table = {}-- each gui script has its own node_table

local function get_nodes(string_table)
	for i in ipairs(string_table) do
		table.insert(node_table, gui.get_node(string_table[i]))
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	--animate the exit in the exit prompt
	local exit_text = gui.get_node("exit_text")
	gui.animate(exit_text, 'position.y', 660, gui.EASING_INOUTBOUNCE, 5, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	hide_exit_prompt()
	msg.post("@render:", "clear_color", { color = vmath.vector4(1, 1, 1, 0) } )
	local node_strings = {'start', "_start", "upgrades", "_upgrades", "sound", 
	"_sound", "exit", "_exit"}
	get_nodes(node_strings)
	--animate_menu(node_table)
	local title = gui.get_node("heading")
	gui.animate(title, "position.y", 1020, gui.EASING_INBOUNCE, 5, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	gui.animate(gui.get_node("heading"), "position.x", 300, gui.EASING_LINEAR, 2, 0, nil, gui.PLAYBACK_ONCE_BACKWARD)
end

function final(self)
	msg.post(".", "release_input_focus")
end

-- action ids
local touch = hash('touch')
local back = hash('back')
function on_input(self, action_id, action)
	if action_id == touch and action.released then
		local start = gui.get_node("_start")
		local upgrades = gui.get_node("_upgrades")
		local sound = gui.get_node("_sound")
		local exit = gui.get_node("_exit")
		local yes = gui.get_node("yes_exit")
		local no = gui.get_node("no_exit")
		--main = "main:/main#main"
		if is_exit_prompt_active == false then
			if gui.pick_node(start, action.x, action.y) then
				button_tapped = 'start'
				TouchFb.touch_feedback(start, handle_input)
			elseif gui.pick_node(upgrades, action.x, action.y) then
				button_tapped = 'upgrades'
				TouchFb.touch_feedback(upgrades, handle_input)
			elseif gui.pick_node(sound, action.x, action.y) then
				button_tapped = 'sound'
				TouchFb.touch_feedback(sound, handle_input)
			elseif gui.pick_node(exit, action.x, action.y) then
				button_tapped = 'exit'
				TouchFb.touch_feedback(exit, handle_input)
			end
		else
			if gui.pick_node(yes, action.x, action.y) then
				button_tapped = 'yes'
				TouchFb.touch_feedback(yes, handle_input)
			elseif gui.pick_node(no, action.x, action.y) then
				button_tapped = 'no'
				TouchFb.touch_feedback(no,handle_input)
			end
		end
	elseif action_id == back then
		if is_exit_prompt_active == false then
			button_tapped = 'exit'
			TouchFb.touch_feedback(exit, handle_input)
		else
			hide_exit_prompt()
		end
	end
end