local TouchFb = require("modules.animation")
local Colors = require("modules.colors")

local button_tapped = nil
local len_of_unlkd_clrs

local function handle_input()
	if button_tapped == '3_colors' then
		NUM_OF_COLORS_PICKED = 3
		--load the pick colors collection
		msg.post(main, "load_pick_colors")
	elseif button_tapped == '4_colors' then
		NUM_OF_COLORS_PICKED = 4
		--load the pick colors collection
		msg.post(main, "load_pick_colors")
	elseif button_tapped == '5_colors' then
		NUM_OF_COLORS_PICKED = 5
		--load the pick colors collection
		msg.post(main, "load_pick_colors")
	elseif button_tapped == '6_colors' then
		NUM_OF_COLORS_PICKED = 6
		--load the pick colors collection
		msg.post(main, "load_pick_colors")
	elseif button_tapped == 'random' then
		if len_of_unlkd_clrs >= 6 then
			NUM_OF_COLORS_PICKED = math.random(3, 6)
		else
			NUM_OF_COLORS_PICKED = math.random(3, 5)
		end
		--load the pick colors collection
		msg.post(main, "load_pick_colors")
	elseif button_tapped == 'menu' then
		msg.post(main, "unload_color_menu")
	end
end

-- the string ids of the nodes in this collection
local nodes = {"3_colors", "4_colors", "5_colors", "6_colors", "random"}

function init(self)
	math.randomseed(os.time())
	msg.post("@render:", "clear_color", { color = vmath.vector4(1, 1, 1, 0) } )
	msg.post(".", "acquire_input_focus")
	len_of_unlkd_clrs = Colors.check_len_of_unlkd_clrs()
	if len_of_unlkd_clrs <= 6 then
		local node = gui.get_node(nodes[4])
		gui.set_text(node, "LOCKED")
	end
end

local touch = hash("touch")
function on_input(self, action_id, action)
	local menu = gui.get_node("_menu")
	if action_id == touch and action.released then
		for k, v in ipairs(nodes) do
			local node = gui.get_node(v)
			if gui.pick_node(node, action.x, action.y) == true then
				button_tapped = v
				TouchFb.touch_feedback(node , handle_input)
			elseif gui.pick_node(menu, action.x, action.y) == true then
				button_tapped = "menu"
				TouchFb.touch_feedback(menu, handle_input)
			end
		end
	end
end